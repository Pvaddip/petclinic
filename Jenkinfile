pipeline {
    agent { 
        label 'linux'
    }
    
    tools {
        maven 'M3.8' 
    }
    
    stages {
        stage('Checkout code') {
            steps {
                git branch: 'feature/JIRA-143', url: 'https://github.com/akmaharshi/petclinic.git'
            }
        }
    
        stage('Maven Build') {
            steps {
                sh "mvn clean package"
            }
        }

        stage('Junit tests') {
            steps {
                junit 'target/surefire-reports/*.xml'
            }
        }

        stage('Archive Artifacts') {
            steps {
                archiveArtifacts artifacts: 'target/*.?ar', followSymlinks: false
            }
        }
        
        stage('Nexus Uploader') {
            steps {
                nexusArtifactUploader artifacts: [[artifactId: 'spring-petclinic', classifier: '', file: 'target/petclinic.war', type: 'war']], credentialsId: 'nexusCred', groupId: 'org.springframework.samples', nexusUrl: '18.221.115.82:8081', nexusVersion: 'nexus3', protocol: 'http', repository: 'maven-snapshots', version: '4.2.0-SNAPSHOT'
            }
        }
    }
    
    post {
        success {
            notify('Success','#00FF00') 
        }
        failure {
            notify("Failed",'#FF0000')
        }
        aborted {
            notify("Aborted",'#FF0000')
        }
    }
}

def notify(status,colour) {
    slackSend channel: 'devops-july', 
        color: "${colour}", 
        iconEmoji: 'thumbsup', 
        message: "Build ${status}: ${env.JOB_NAME} ${env.BUILD_NUMBER} Build URL: ${env.BUILD_URL}", 
        teamDomain: 'anildevops', 
        tokenCredentialId: 'slack-cred'
    
    emailext (
        to: 'devops.kphb@gmail.com',
        subject: "${status}: ${env.JOB_NAME} ${env.BUILD_NUMBER}",
        body: """<p>Build ${status}: ${env.JOB_NAME} ${env.BUILD_NUMBER} </p>
            <p>Check console output at : <a href=${env.BUILD_URL}>${env.JOB_NAME} ${env.BUILD_NUMBER}</a></p>"""
    )
}
